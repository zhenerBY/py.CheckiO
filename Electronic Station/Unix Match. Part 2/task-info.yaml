type: checkiO
files:
- name: mission.py
  visible: true
  text: "def unix_match(filename: str, pattern: str) -> bool:\n    import re\n   \
    \ if '[' in pattern:\n        seq = pattern[pattern.index('['):pattern.index(']')+1]\n\
    \        # print('seq', seq)\n        seq2 = seq\n        if seq == '[]':\n  \
    \          return False\n        elif seq == '[!]':\n            pattern = pattern.replace('[!]',\
    \ '\\[!\\]')\n        elif seq2[1] == '!':\n            seq2 = seq2.replace('!',\
    \ '^')\n            # print(seq2)\n            pattern = pattern.replace(seq,\
    \ seq2)\n        # print(pattern)\n\n    pattern = pattern.replace('*', '.*')\n\
    \    pattern = pattern.replace('.', '\\.')\n    pattern = pattern.replace('?',\
    \ '.')\n    # your code here\n    # print(pattern)\n    return bool(re.fullmatch(pattern,\
    \ filename))\n\n\nif __name__ == '__main__':\n    print(\"Example:\")\n    print(unix_match('somefile.txt',\
    \ '*'))\n    \n    # These \"asserts\" are used for self-checking and not for\
    \ an auto-testing\n    assert unix_match('somefile.txt', 'somefile.txt') == True\n\
    \    assert unix_match('1name.txt', '[!abc]name.txt') == True\n    assert unix_match('log1.txt',\
    \ 'log[!0].txt') == True\n    assert unix_match('log1.txt', 'log[1234567890].txt')\
    \ == True\n    assert unix_match('log1.txt', 'log[!1].txt') == False\n    print(\"\
    Coding complete? Click 'Check' to earn cool rewards!\")\n"
  learner_created: false
status: Solved
code: "def unix_match(filename: str, pattern: str) -> bool:\n    import re\n    if\
  \ '[' in pattern:\n        seq = pattern[pattern.index('['):pattern.index(']')+1]\n\
  \        # print('seq', seq)\n        seq2 = seq\n        if seq == '[]':\n    \
  \        return False\n        elif seq == '[!]':\n            pattern = pattern.replace('[!]',\
  \ '\\[!\\]')\n        elif seq2[1] == '!':\n            seq2 = seq2.replace('!',\
  \ '^')\n            # print(seq2)\n            pattern = pattern.replace(seq, seq2)\n\
  \        # print(pattern)\n\n    pattern = pattern.replace('*', '.*')\n    pattern\
  \ = pattern.replace('.', '\\.')\n    pattern = pattern.replace('?', '.')\n    #\
  \ your code here\n    # print(pattern)\n    return bool(re.fullmatch(pattern, filename))\n\
  \n\nif __name__ == '__main__':\n    print(\"Example:\")\n    print(unix_match('somefile.txt',\
  \ '*'))\n    \n    # These \"asserts\" are used for self-checking and not for an\
  \ auto-testing\n    assert unix_match('somefile.txt', 'somefile.txt') == True\n\
  \    assert unix_match('1name.txt', '[!abc]name.txt') == True\n    assert unix_match('log1.txt',\
  \ 'log[!0].txt') == True\n    assert unix_match('log1.txt', 'log[1234567890].txt')\
  \ == True\n    assert unix_match('log1.txt', 'log[!1].txt') == False\n    print(\"\
  Coding complete? Click 'Check' to earn cool rewards!\")\n"
seconds_from_change: 1643002
