type: checkiO
files:
- name: mission.py
  visible: true
  text: "def checkio(number: int) -> int:\n    for i in str(number).split():\n   \
    \     if len(str(number)) == 1:\n            if number == 0:\n               \
    \ return 1\n            else:\n                return number\n        else:\n\
    \            return int(str(number)[0]) * checkio(int(str(number)[1:]))\n\n\n\
    if __name__ == '__main__':\n    print('Example:')\n    print(checkio(123405))\n\
    \    \n    # These \"asserts\" using only for self-checking and not necessary\
    \ for auto-testing\n    assert checkio(123405) == 120\n    assert checkio(999)\
    \ == 729\n    assert checkio(1000) == 1\n    assert checkio(1111) == 1\n    print(\"\
    Coding complete? Click 'Check' to review your tests and earn cool rewards!\")\n"
  learner_created: false
status: Solved
code: "def checkio(number: int) -> int:\n    for i in str(number).split():\n     \
  \   if len(str(number)) == 1:\n            if number == 0:\n                return\
  \ 1\n            else:\n                return number\n        else:\n         \
  \   return int(str(number)[0]) * checkio(int(str(number)[1:]))\n\n\nif __name__\
  \ == '__main__':\n    print('Example:')\n    print(checkio(123405))\n    \n    #\
  \ These \"asserts\" using only for self-checking and not necessary for auto-testing\n\
  \    assert checkio(123405) == 120\n    assert checkio(999) == 729\n    assert checkio(1000)\
  \ == 1\n    assert checkio(1111) == 1\n    print(\"Coding complete? Click 'Check'\
  \ to review your tests and earn cool rewards!\")\n"
seconds_from_change: 12182088
